import { ResourcesInterface } from './resources.interface';

export const resourcesEn: ResourcesInterface = Object.freeze({
    bit_by_bit: 'BitByBit',
    app_menu_run_code: 'Run The Code',
    app_menu_swap_canvas: 'Swap Canvas',
    app_menu_support_us_on_patreon: 'Support us on Patreon',
    app_menu_clean_canvas: 'Clean Canvas',
    app_menu_more: 'More',
    app_menu_more_about: 'About',
    app_menu_more_home: 'Home of BitByBit',
    app_menu_more_about_paragraph_first: 'BitByBit is an open source, community-based, frictionless web platform that allows creators to program geometry through simple visual programming language. This tool is great for all ages and can fulfil many artistic, educational, and practical needs of its users. Through familiar programming interface used in tools such as Scratch we expose powerful 3D algorithms that make it easier to implement various parametric tasks. Our goal is to make it very simple for users to share their ideas and designs by just exporting and importing scripts, uploading designs, and participating in lively discussions on Discord. We want to encourage everyone to engage in the future of this tool.',
    app_menu_more_about_paragraph_second: 'Programming language that was implemented in BitByBit platform consists of basic building blocks that can compose various 3D shapes. Starting from simple points, lines and going into NURBS curves and surfaces. This model allows creators to learn by experimenting. 3D environment that is integrated in the platform provides instant feedback and gratification, which inspires users to grow and innovate.',
    app_menu_more_about_paragraph_third: 'BitByBit will always keep its Core free for its users. Principles of minimalism and simplicity are reflected in all of the design decisions we make. Application itself is frictionless, users do not need to create accounts or install browser plugins. We could not find a better Home screen for the application than the application itself. Website immediately starts the empty canvas for your code and an empty 3D world. All Core algorithms will always remain opensource and will not require any backend based server infrastructure. This will allow application to be used on various devices as a Progressive Web App (PWA). After the application is loaded on your devices, internet connectivitiy will not be required for it to function.',
    app_menu_more_about_paragraph_fourth: 'Community members are encouraged to join our Forum at Discord, share their creations, ask questions, teach, inspire each other and grow. We are also actively looking for patrons and sponsors to support our development efforts. Authors are eager to learn what you think this tool can become.',
    app_menu_more_about_paragraph_fifth: 'BitByBit is proud to be developed on great technologies. We appreciate the opportunity that Blockly, BabylonJS and VerbNurbs provide.',
    app_menu_more_about_paragraph_sixth: 'BitByBit is in alpha release, beware of dragons. We try to avoid, but do not guarantee that breaking changes will not occur. Currently the platform is in active development and is not yet stable.',
    app_menu_more_about_sub_header_first: 'Principles',
    app_menu_more_about_sub_header_second: 'Community',
    app_menu_more_about_sub_header_third: 'Thanks to other open-source projects!',
    app_menu_more_about_sub_header_fourth: 'Important!',
    app_menu_more_about_sub_header_fifth: 'License',
    app_menu_more_settings: 'Settings',
    app_menu_more_settings_explanation_save: 'Setting preferences will be saved for your next visit.',
    app_menu_more_examples: 'Examples',
    app_menu_more_examples_explanation: 'Provided examples give you a starting point to understanding the world of 3D algorithms.',
    app_menu_more_examples_newbie: 'Newbie',
    app_menu_more_examples_newbie_polyline_between_three_points_title: 'Polyline between three points',
    app_menu_more_examples_newbie_polyline_between_three_points_description: 'This simple example creates a list of three points, assigns the list to variable and creates polyline from that.',
    app_menu_more_examples_newbie_nurbs_curve_along_points_title: 'Nurbs curve along points',
    app_menu_more_examples_newbie_nurbs_curve_along_points_description: 'The NURBS curve gets created by using 7 control points. That curve is then subdivided into 20 equally distanced points. The result is visualized.',
    app_menu_more_examples_newbie_transformation_circle_title: 'Transformation circle',
    app_menu_more_examples_newbie_transformation_circle_description: 'This example demonstrates the transformation of a circle. Simple iteration applies rotation and scale transformations to create beautiful shell like structural elements.',
    app_menu_more_examples_newbie_standard_surfaces_title: 'Standard surfaces',
    app_menu_more_examples_newbie_standard_surfaces_description: 'Shows how to create standard NURBS surfaces. Sphere, cone, cylinder, extrusion, revolution and sweep surfaces are set up in one scene.',
    app_menu_more_examples_newbie_curve_to_gcode_title: 'Curve to CNC GCode',
    app_menu_more_examples_newbie_curve_to_gcode_description: 'Demonstrates how simple curve is converted to CNC GCode. Script runs and offers to save the file to disk. If dialog gets clsoed user can analyse the 3D model and tagged points.',
    app_menu_more_examples_street_smart: 'Street Smart',
    app_menu_more_examples_street_smart_virtual_folds_in_iteration_title: 'Virtual folds in iteration',
    app_menu_more_examples_street_smart_virtual_folds_in_iteration_description: 'A small iteration produces pleasing aesthetics. Illustrates well how little amount of code can give very interesting results.',
    app_menu_more_examples_street_smart_kinetic_surfaces_title: 'Kinetic surfaces',
    app_menu_more_examples_street_smart_kinetic_surfaces_description: 'Example demonstrates the real time simulation of structures. It introduces the concept of rendering loop and shows how updatable drawing can be used to simulate various geometric transformations.',
    app_menu_more_examples_street_smart_lines_between_two_surfaces_title: 'Lines between two surfaces',
    app_menu_more_examples_street_smart_lines_between_two_surfaces_description: 'There are two NURBS surfaces created above each other from corner points. Then both surfaces are subdivided in equal number of isocurves, those then are subdivided into points and those points are used to create lines between both surfaces.',
    app_menu_more_examples_ninja_magic_spiral_title: 'Magic spiral',
    app_menu_more_examples_ninja_magic_spiral_description: 'Spirals are everywhere in nature and they are beautiful. This example demonstrates how to code the magical parametric spiral.',    
    app_menu_more_examples_ninja_living_landscape_title: 'Living landscape',
    app_menu_more_examples_ninja_living_landscape_description: 'This example demonstrates how agent based simulation can drive the behaviour of landscape geometry.',
    app_menu_more_examples_ninja_crypto_data_visualziation_title: 'Crypto currency data visualization',
    app_menu_more_examples_ninja_crypto_data_visualziation_description: '3D data visualization opens up additional layer for understanding your information. This example demonstrates 3D charts of some popular crypto currencies. Communication with coingecko api is implemented via Http components, data is assembled and visualized via 3D tags and polylines.',
    app_menu_more_examples_ninja: 'Ninja',
    app_menu_more_sponsors: 'Sponsors and Partners',
    app_menu_more_sponsors_explanation: 'We are proud to have these companies as our industry partners and sponsors.',
    app_menu_more_sponsors_email: 'If you would like to help us out, send us an email on',
    app_menu_more_community: 'Community',
    app_menu_more_export: 'Export',
    app_menu_more_import: 'Import',
    app_button_close: 'Close',
    app_button_save: 'Save',
    app_button_cancel: 'Cancel',
    app_button_create: 'Create',
    app_languages: 'Languages',
    app_languages_lithuanian: 'Lithuanian',
    app_placeholder_text: 'Place your text here',
    app_languages_english: 'English',
    app_default_file_name: 'file',
    app_default_file_extension: 'txt',
    app_prompt_value: 'Prompt value',
    app_prompt_value_placeholder: 'Enter the value',
    app_print_save_dialog_text: 'Text to Save',
    app_print_save_dialog_file_extension: 'Extension',
    app_print_save_dialog_file_name: 'Filename',
    app_print_save_dialog_title: 'Preview and Save Dialog',
    app_save_dialog_title: 'Save Dialog',
    app_print_save_dialog_text_to_save: 'Text to save',
    app_print_save_dialog_export: 'Save to File',
    app_print_save_dialog_file_format: 'Enter your file format, like txt, csv or others',
    block_toolbox_category_scene: 'Scene',
    block_toolbox_category_core_types: 'Base Types',
    block_toolbox_category_core_vector: 'Vector',
    block_toolbox_category_core_node: 'Node',
    block_toolbox_category_core_transforms: 'Transforms',
    block_toolbox_category_geom_point: 'Point',
    block_toolbox_category_geom_line: 'Line',
    block_toolbox_category_geom_polyline: 'Polyline',
    block_toolbox_category_geom_curve: 'Curve',
    block_toolbox_category_geom_circle: 'Circle',
    block_toolbox_category_geom_ellipse: 'Ellipse',
    block_toolbox_category_geom_surface: 'Surface',
    block_toolbox_category_geom_solid: 'Solid',
    block_toolbox_category_geom_plane: 'Plane',
    block_toolbox_category_geom_sphere: 'Sphere',
    block_toolbox_category_geom_cone: 'Cone',
    block_toolbox_category_geom_sweep: 'Sweep',
    block_toolbox_category_geom_revolution: 'Revolution',
    block_toolbox_category_geom_cylinder: 'Cylinder',
    block_toolbox_category_geom_extrusion: 'Extrusion',
    block_toolbox_category_geom_tag: 'Tag',
    block_toolbox_category_intersect: 'Intersect',
    block_toolbox_category_create: 'Create',
    block_toolbox_category_2d_path: '2D Path',
    block_toolbox_category_2d_polygon: '2D Polygon',
    block_toolbox_category_boolean: 'Boolean',
    block_toolbox_category_hull: 'Hull',
    block_toolbox_category_expansions: 'Expansions',
    block_toolbox_category_3d_solid: '3D Solid',
    block_toolbox_category_extrusion: 'Extrusion',
    block_toolbox_category_draw: 'Draw',
    block_toolbox_category_apply: 'Apply',
    block_toolbox_category_apply_get: 'Get',
    block_toolbox_category_apply_set: 'Set',
    block_toolbox_category_apply_convert: 'Convert',
    block_toolbox_category_loop: 'Loop',
    block_toolbox_category_logic: 'Logic',
    block_toolbox_category_math: 'Math',
    block_toolbox_category_lists: 'Lists',
    block_toolbox_category_date: 'Date',
    block_toolbox_category_colour: 'Colour',
    block_toolbox_category_text: 'Text',
    block_toolbox_category_variables: 'Variables',
    block_toolbox_category_functions: 'Functions',
    block_toolbox_category_io: 'IO',
    block_toolbox_category_time: 'Time',
    block_toolbox_category_io_text: 'Text',
    block_toolbox_category_io_json: 'JSON',
    block_toolbox_category_io_http: 'HTTP',
    block_number: 'Number',
    block_modulus: 'Modulus',
    block_year: 'Year',
    block_month: 'Month',
    block_day: 'Day',
    block_weekday: 'Weekday',
    block_hour: 'Hour',
    block_minute: 'Minute',
    block_second: 'Second',
    block_milliseconds: 'Milliseconds',
    block_computing: 'Waiting',
    block_url: 'URL',
    block_body: 'Body',
    block_point: 'Point',
    block_delta: 'Delta',
    block_corners: 'Corners',
    block_closed: 'Closed',
    block_opened: 'Opened',
    block_2d_path: 'Path',
    block_2d_paths: 'Paths',
    block_promise: 'Promise',
    block_timeout: 'Timeout',
    block_text_tag: 'Text tag',
    block_number_to_remap: 'Number to remap',
    block_number_to_round: 'Number to round',
    block_decimal_places: 'Decimal places',
    block_text_tags: 'Text tags',
    block_coordinate_x: 'Coordinate X',
    block_coordinate_y: 'Coordinate Y',
    block_coordinate_z: 'Coordinate Z',
    block_coordinate_short_x: 'X',
    block_coordinate_short_y: 'Y',
    block_coordinate_short_z: 'Z',
    block_base: 'Base',
    block_height: 'Height',
    block_points: 'Points',
    block_polygon: 'Polygon',
    block_polygons: 'Polygons',
    block_text: 'Text',
    block_json: 'JSON',
    block_param: 'Parameter',
    block_path: 'Path',
    block_shape: 'Shape',
    block_holes: 'Holes',
    block_value: 'Value',
    block_name: 'Name',
    block_unix_timestamp: 'Unix timestamp',
    block_paths_values: 'Paths and values',
    block_query: 'Query',
    block_number_points: 'Number of points',
    block_curve: 'Curve',
    block_date: 'Date',
    block_time: 'Time',
    block_curves: 'Curves',
    block_colour: 'Colour',
    block_opacity: 'Opacity',
    block_width: 'Width',
    block_line: 'Line',
    block_node: 'Node',
    block_nodes: 'Nodes',
    block_lines: 'Lines',
    block_size: 'Size',
    block_updatable: 'Updatable',
    block_position: 'Position',
    block_rotation: 'Rotation',
    block_mesh: 'Mesh',
    block_solid: 'Solid',
    block_solids: 'Solids',
    block_adapt_depth: 'Adapt Depth',
    block_polyline: 'Polyline',
    block_surface: 'Surface',
    block_surfaces: 'Surfaces',
    block_profile: 'Profile',
    block_rail: 'Rail',
    block_sweep: 'Sweep',
    block_direction: 'Direction',
    block_sphere: 'Sphere',
    block_revolution: 'Revolution',
    block_extrusion: 'Extrusion',
    block_cone: 'Cone',
    block_cylinder: 'Cylinder',
    block_circle: 'Circle',
    block_center: 'Center',
    block_ellipse: 'Ellipse',
    block_radius: 'Radius',
    block_resolution: 'Resolution',
    block_segments: 'Segments',
    block_min: 'Minimum',
    block_max: 'Maximum',
    block_integer: 'Integer',
    block_interval: 'Interval',
    block_interval_handler: 'Interval handler',
    block_timeout_handler: 'Timeout handler',
    block_scale: 'Scale',
    block_vector: 'Vector',
    block_vectors: 'Vectors',
    block_angle: 'Angle',
    block_start_angle: 'Start angle',
    block_end_angle: 'End angle',
    block_axis: 'Axis',
    block_x_axis: 'X Axis',
    block_y_axis: 'Y Axis',
    block_min_angle: 'Minimum angle',
    block_max_angle: 'Maximum angle',
    block_intersection: 'Intersection',
    block_intersections: 'Intersections',
    block_decimap_places: 'Decimal places',
    block_source_interval: 'Source interval',
    block_target_interval: 'Target interval',
    block_u: 'U',
    block_v: 'V',
    block_uv: 'UV',
    block_use_v: 'Use V',
    block_scalar: 'Scalar',
    block_distance: 'Distance',
    block_fraction: 'Fraction',
    block_transform: 'Transformation',
    block_reference: 'Reference',
    block_knots: 'Knots',
    block_knots_u: 'Knots U',
    block_knots_v: 'Knots V',
    block_weights: 'Weights',
    block_degree: 'Degree',
    block_degree_u: 'Degree U',
    block_degree_v: 'Degree V',
    block_num_derivatives: 'Number of derivatives',
    block_step: 'Step',
    block_steps: 'Steps',
    block_parameter: 'Parameter',
    block_parameter_u: 'Parameter U',
    block_parameter_v: 'Parameter V',
    block_subdivision: 'Subdivision',
    block_length: 'Length',
    block_tolerance: 'Tolerance',
    block_validation_required: 'must be provided',
    block_validation_of_length: 'must contain item count of',
    block_validation_higher_or_equal: 'must be higher or equal to',
    block_validation_lower_or_equal: 'must be lower or equal to',
    block_validation_range: 'must be in range',
    block_validation_smaller_than: 'must be smaller than',
    block_validation_smaller_or_equal_than: 'must be smaller or equal than',
    block_validation_larger_than: 'must be larger than',
    block_validation_larger_or_equal_than: 'must be larger or equal than',
    block_babylon_input_curve: 'Draw',
    block_babylon_input_curve_2: 'with curve',
    block_babylon_input_curve_variable: 'curveMesh',
    block_babylon_input_curves: 'Draw',
    block_babylon_input_curves_2: 'with curves',
    block_babylon_input_curves_variable: 'curvesMesh',
    block_babylon_input_colour: 'Colour',
    block_babylon_input_opacity: 'Opacity',
    block_babylon_input_width: 'Width',
    block_babylon_input_height: 'Height',
    block_babylon_input_subdivisions: 'Subdivisions',
    block_babylon_input_major_unit_frequency: 'Major unit frequency',
    block_babylon_input_minor_unit_visibility: 'Minor unit visibility',
    block_babylon_input_back_face_culling: 'Back face culling',
    block_babylon_input_main_colour: 'Main color',
    block_babylon_input_secondary_colour: 'Secondary color',
    block_babylon_input_grid_ratio: 'Grid ratio',
    block_babylon_input_draw_point: 'Draw',
    block_babylon_input_draw_point_variable: 'pointMesh',
    block_babylon_input_draw_point_2: 'with point',
    block_babylon_draw_csg_mesh_input_csg_mesh_variable: 'solidMesh',
    block_babylon_draw_csg_mesh_input_csg_mesh: 'Draw',
    block_babylon_draw_csg_mesh_input_csg_mesh_2: 'with solid or polygon',
    block_babylon_draw_csg_mesh_description: 'Draws the solid or polygon.',
    block_babylon_draw_csg_meshes_input_csg_meshes_variable: 'solidsMesh',
    block_babylon_draw_csg_meshes_input_csg_meshes: 'Draw',
    block_babylon_draw_csg_meshes_input_csg_meshes_2: 'with solids',
    block_babylon_draw_csg_meshes_description: 'Draws the solids',
    block_babylon_input_draw_points: 'Draw',
    block_babylon_input_draw_points_variable: 'pointsMesh',
    block_babylon_input_draw_points_2: 'with points',
    block_babylon_input_draw_grid_variable: 'gridMesh',
    block_babylon_input_draw_grid: 'Draw',
    block_babylon_input_draw_grid_2: 'of width',
    block_babylon_input_draw_line: 'Draw',
    block_babylon_input_draw_line_variable: 'lineMesh',
    block_babylon_input_draw_line_2: 'with line',
    block_babylon_input_draw_lines: 'Draw',
    block_babylon_input_draw_lines_variable: 'linesMesh',
    block_babylon_input_draw_lines_2: 'with lines',
    block_babylon_input_draw_node: 'Draw a node',
    block_babylon_input_draw_node_color_x: 'Axis X colour',
    block_babylon_input_draw_node_color_y: 'Axis Y colour',
    block_babylon_input_draw_node_color_z: 'Axis Z colour',
    block_babylon_input_draw_node_description: 'Draws the xyz axis of a node.',
    block_babylon_input_draw_nodes: 'Draw nodes',
    block_babylon_input_draw_nodes_color_x: 'Axis X colour',
    block_babylon_input_draw_nodes_color_y: 'Axis Y colour',
    block_babylon_input_draw_nodes_color_z: 'Axis Z colour',
    block_babylon_input_draw_nodes_description: 'Draws the xyz axis of all provided nodes.',
    block_babylon_input_draw_polylines: 'Draw',
    block_babylon_input_draw_polylines_variable: 'polylinesMesh',
    block_babylon_input_draw_polylines_2: 'with polylines',
    block_babylon_input_draw_polyline: 'Draw',
    block_babylon_input_draw_polyline_variable: 'polylineMesh',
    block_babylon_input_draw_polyline_2: 'with polyline',
    block_babylon_input_draw_2d_path: 'Draw',
    block_babylon_input_draw_2d_path_2: 'with path',
    block_babylon_input_draw_2d_path_variable: 'pathMesh',
    block_babylon_input_draw_surface: 'Draw',
    block_babylon_input_draw_surface_variable: 'surfaceMesh',
    block_babylon_input_draw_surface_2: 'with surface',
    block_babylon_input_draw_surfaces: 'Draw',
    block_babylon_input_draw_surfaces_variable: 'surfacesMesh',
    block_babylon_input_draw_surfaces_2: 'with surfaces',
    block_babylon_input_scene_background_colour: 'Scene background colour',
    block_babylon_scene_background_colour_description: 'Change the background color of the 3D scene.',
    block_babylon_input_size: 'Size',
    block_babylon_input_updatable: 'Updatable',
    block_babylon_draw_curve_description: 'Draws a coloured curve of selected width.',
    block_babylon_draw_curves_description: 'Draws a coloured curves of selected width.',
    block_babylon_draw_grid_description: 'Draws the ground grid to help orientation when navigating 3D space.',
    block_babylon_draw_line_description: 'Draws a coloured line of selected width.',
    block_babylon_draw_lines_description: 'Draws a coloured lines of selected width.',
    block_babylon_draw_point_description: 'Draws a coloured selected size point in space.',
    block_babylon_draw_points_description: 'Draws a coloured selected size points in space.',
    block_babylon_draw_polyline_description: 'Draws a coloured polyline of selected width.',
    block_babylon_draw_2d_path_description: 'Draws a coloured path of selected width.',
    block_babylon_draw_polylines_description: 'Draws a coloured polylines of selected width.',
    block_babylon_draw_surface_description: 'Draws a coloured surface.',
    block_babylon_draw_surfaces_description: 'Draws a coloured surfaces.',
    block_babylon_update_input_register_render_loop_listener: 'Register render loop listener',
    block_babylon_update_input_update: 'And update',
    block_babylon_update_input_time_passed: 'timeElapsedFromPreviousFrame',
    block_babylon_update_description: 'Runs the statment in the render loop and indicates how much time has passed since last frame in timeElapsedFromPreviousFrame variable.',
    block_base_geometry_input_line_start_point: 'Line with start point',
    block_base_geometry_input_line_end_point: 'End point',
    block_base_geometry_line_description: 'Constructs a Line object between two points.',
    block_base_geometry_line_end_point: 'End point of the line',
    block_base_geometry_line_end_point_description: 'Gets the end point of the line.',
    block_base_geometry_line_start_point: 'Start point of the line',
    block_base_geometry_line_start_point_description: 'Gets the start point of the line.',
    block_base_geometry_line_length: 'Length of the line',
    block_base_geometry_line_length_description: 'Get length of the line.',
    block_base_geometry_line_convert_to_nurbs_curve: 'Curve from line',
    block_base_geometry_line_convert_to_nurbs_curve_description: 'Converts line to curve.',
    block_base_geometry_polyline_convert_to_nurbs_curve: 'Curve from polyline',
    block_base_geometry_polyline_convert_to_nurbs_curve_description: 'Converts polyline to curve.',
    block_base_geometry_line_reverse: 'Reverse the line',
    block_base_geometry_line_reverse_description: 'Reverses the line direction. Start point becomes end point and vice versa.',
    block_base_geometry_point_description: 'Creates a point in space.',
    block_base_geometry_point_2d_description: 'Creates a point in XY plane.',
    block_base_geometry_point_distance: 'Distance between first point',
    block_base_geometry_point_distance_second_point: 'Second point',
    block_base_geometry_point_distance_description: 'Measures a distance between two points.',
    block_base_geometry_point_x: 'X coordinate of the point',
    block_base_geometry_point_x_description: 'Gets X coordinate of the point.',
    block_base_geometry_point_y: 'Y coordinate of the point',
    block_base_geometry_point_y_description: 'Gets Y coordinate of the point.',
    block_base_geometry_point_z: 'Z coordinate of the point',
    block_base_geometry_point_z_description: 'Gets Z coordinate of the point.',
    block_base_geometry_polyline: 'Polyline with points',
    block_base_geometry_polyline_description: 'Constructs a polyline through points.',
    block_base_geometry_polyline_length: 'Length of the polyline',
    block_base_geometry_polyline_length_description: 'Gets a length of the polyline.',
    block_base_geometry_polyline_points: 'Points of the polyline',
    block_base_geometry_polyline_points_description: 'Gets the points of the polyline.',
    block_base_geometry_polyline_points_count: 'Count points in polyline',
    block_base_geometry_polyline_points_count_description: 'Counts points on the polyline.',
    block_base_geometry_polyline_reverse: 'Reverse the polyline',
    block_base_geometry_polyline_reverse_description: 'Flips the direction of the polyline.',
    block_verb_core_interval_input_min: 'Interval with minimum',
    block_verb_core_interval_input_max: 'Maximum',
    block_verb_core_interval_description: 'Constructs interval between minimum and maximum. Minimum must be smaller or equal to maximum.',
    block_verb_core_interval_get_max: 'Maximum bound of the interval',
    block_verb_core_interval_get_max_description: 'Gets maximum bound of the interval.',
    block_verb_core_interval_get_min: 'Minimum bound of the interval',
    block_verb_core_interval_get_min_description: 'Gets minimum bound of the interval.',
    block_babylon_input_transformation_scale_uniform: 'Uniform scale',
    block_babylon_input_transformation_scale_center: 'Center',
    block_babylon_transformation_scale_uniform_description: 'Constructs transformation of uniform scale on XYZ directions.',
    block_babylon_input_transformation_scale_xyz: 'Scale with XYZ vector',
    block_babylon_transformation_scale_xyz_description: 'Constructs XYZ based scale that may scale geometry with different factors in different directions.',
    block_babylon_input_transformation_scale_center_uniform: 'Uniform scale',
    block_babylon_transformation_scale_center_uniform_description: 'Constructs transformations that scales object around certain point in space.',
    block_babylon_input_transformation_scale_center_xyz: 'Scale with XYZ vector',
    block_babylon_transformation_scale_center_xyz_description: 'Constructs XYZ based scale that may scale geometry with different factors in different directions around a center point.',
    block_babylon_input_transformation_translation_xyz: 'Move by XYZ vector',
    block_babylon_transformation_translation_xyz_description: 'Moves the object by XYZ vector',
    block_babylon_input_transformation_rotation_center_x: 'Rotate around X in angle',
    block_babylon_transformation_rotation_center_x_description: 'Rotates object around X axis and a center point.',
    block_babylon_input_transformation_rotation_center_y: 'Rotate around Y in angle',
    block_babylon_transformation_rotation_center_y_description: 'Rotates object around Y axis and a center point.',
    block_babylon_input_transformation_rotation_center_z: 'Rotate around Z in angle',
    block_babylon_transformation_rotation_center_z_description: 'Rotates object around Z axis and a center point.',
    block_babylon_input_transformation_rotation_center_angle: 'Rotate in angle',
    block_babylon_input_transformation_rotation_center_axis: 'Around axis',
    block_babylon_transformation_rotation_center_axis_description: 'Rotates object around Z axis and a center point.',
    block_verb_geom_curve_transform_curve: 'Transform curve',
    block_verb_geom_curve_transform_transformation: 'Transformation',
    block_verb_geom_curve_transform_description: 'Transforms the curve with provided transformation.',
    block_verb_geom_curves_transform_curves: 'Transform curves',
    block_verb_geom_curves_transform_transformation: 'Transformation',
    block_verb_geom_curves_transform_description: 'Transforms the curves with provided transformation.',
    block_verb_geom_surface_transform_surface: 'Transform surface',
    block_verb_geom_surface_transform_transformation: 'Transformation',
    block_verb_geom_surface_transform_description: 'Transforms the surface with provided transformation.',
    block_base_geom_point_transform_point: 'Transform point',
    block_base_geom_point_transform_transformation: 'Transformation',
    block_base_geom_point_transform_description: 'Transforms the point with provided transformation.',
    block_base_geom_points_transform_points: 'Transform points',
    block_base_geom_points_transform_transformation: 'Transformation',
    block_base_geom_points_transform_description: 'Transforms the points with provided transformation.',
    block_base_geom_point_closest_from_points_input_point: 'Closest point between a point',
    block_base_geom_point_closest_from_points_input_points: 'And points',
    block_base_geom_point_closest_from_points_description: 'Finds the closest point between a point and a collection of points.',
    block_base_geom_point_closest_from_points_index_input_point: 'Closest point index between a point',
    block_base_geom_point_closest_from_points_index_input_points: 'And points',
    block_base_geom_point_closest_from_points_index_description: 'Finds the closest point index in collection between a point and a collection of points.',
    block_base_geom_point_closest_from_points_distance_input_point: 'Closest point distance between a point',
    block_base_geom_point_closest_from_points_distance_input_points: 'And points',
    block_base_geom_point_closest_from_points_distance_description: 'Finds the closest point distance between a point and a collection of points.',
    block_base_geom_line_transform_line: 'Transform line',
    block_base_geom_line_transform_transformation: 'Transformation',
    block_base_geom_line_transform_description: 'Transforms the line with provided transformation.',
    block_base_geom_polyline_transform_polyline: 'Transform polyline',
    block_base_geom_polyline_transform_transformation: 'Transformation',
    block_base_geom_polyline_transform_description: 'Transforms the polyline with provided transformation.',
    block_verb_core_uv_input_u: 'UV parameter with U',
    block_verb_core_uv_input_v: 'And V',
    block_verb_core_uv_description: 'Constructs UV parameter object with U and V parameter values.',
    block_verb_core_uv_get_u: 'Get U of UV',
    block_verb_core_uv_get_v: 'Get V of UV',
    block_verb_core_uv_get_u_description: 'Gets U parameter of UV.',
    block_verb_core_uv_get_v_description: 'Gets V parameter of UV.',
    block_verb_core_vector_description: 'Constructs a vector from XYZ coordinates.',
    block_verb_core_vector_add_input_first: 'Add vector',
    block_verb_core_vector_add_input_second: 'With vector',
    block_verb_core_vector_add_description: 'Adds two vectors together.',
    block_verb_core_vector_sub_input_first: 'Subtract vector',
    block_verb_core_vector_sub_input_second: 'From vector',
    block_verb_core_vector_sub_description: 'Subtracts two vectors.',
    block_verb_core_vector_add_all_input_vectors: 'Add all vectors',
    block_verb_core_vector_add_all_description: 'Adds all vectors.',
    block_verb_core_vector_all_input: 'All booleans true',
    block_verb_core_vector_all_description: 'Checks if all booleans are true in the vector.',
    block_verb_core_vector_angle_between_input_first: 'Angle between first vector',
    block_verb_core_vector_angle_between_input_second: 'Second vector',
    block_verb_core_vector_angle_between_description: 'Measures an angle between two vectors.',
    block_verb_core_vector_angle_between_normalized_2d_input_first: 'Normalized 2d angle between first vector',
    block_verb_core_vector_angle_between_normalized_2d_input_second: 'Second vector',
    block_verb_core_vector_angle_between_normalized_2d_description: 'Measures normalized 2d angle between two vectors.',
    block_verb_core_vector_cross_input_first: 'Cross first vector',
    block_verb_core_vector_cross_input_second: 'Second vector',
    block_verb_core_vector_cross_description: 'Crossess two vectors.',
    block_verb_core_vector_distance_input_first: 'Distance between first vector',
    block_verb_core_vector_distance_input_second: 'Second vector',
    block_verb_core_vector_distance_description: 'Measures distance between two vectors.',
    block_verb_core_vector_distance_squared_input_first: 'Squared distance between first vector',
    block_verb_core_vector_distance_squared_input_second: 'Second vector',
    block_verb_core_vector_distance_squared_description: 'Measures a squared distance between two vectors.',
    block_verb_core_vector_div_input_vector: 'Divide a vector',
    block_verb_core_vector_div_input_scalar: 'By a scalar',
    block_verb_core_vector_div_description: 'Divides a vector by a scalar number.',
    block_verb_core_vector_domain_input_vector: 'Domain of the vector',
    block_verb_core_vector_domain_description: 'Measures the domain of the vector.',
    block_verb_core_vector_dot_input_vector: 'Dot product between vector',
    block_verb_core_vector_dot_input_scalar: 'Second vector',
    block_verb_core_vector_dot_description: 'Measures dot product between two vectors.',
    block_verb_core_vector_finite_input_vector: 'Check for infinity in vector',
    block_verb_core_vector_finite_description: 'Creates collection of booleans that identify if elements in the list are finite or not.',
    block_verb_core_vector_is_zero_input_vector: 'Is zero vector',
    block_verb_core_vector_is_zero_description: 'Checks if vector is zero vector.',
    block_verb_core_vector_lerp_fraction: 'Point on the fraction parameter',
    block_verb_core_vector_lerp_input_first: 'Between vector',
    block_verb_core_vector_lerp_input_second: 'And vector',
    block_verb_core_vector_lerp_description: 'Returns the point between the two vectors given the fraction parameter',
    block_verb_core_vector_max_input_vector: 'Highest number in vector',
    block_verb_core_vector_max_description: 'Returns maximum number in the vector.',
    block_verb_core_vector_min_input_vector: 'Lowest number in vector',
    block_verb_core_vector_min_description: 'Returns minimum number in the vector.',
    block_verb_core_vector_mul_input_vector: 'Multiply a vector',
    block_verb_core_vector_mul_input_scalar: 'By a scalar',
    block_verb_core_vector_mul_description: 'Multiplies a vector by a scalar number.',
    block_verb_core_vector_negate_input_vector: 'Negate the vector',
    block_verb_core_vector_negate_description: 'Negates the vector.',
    block_verb_core_vector_norm_input_vector: 'Norm of the vector',
    block_verb_core_vector_norm_description: 'Returns the distance of the vector from 0.',
    block_verb_core_vector_norm_squared_input_vector: 'Squared norm of the vector',
    block_verb_core_vector_norm_squared_description: 'Returns the squared norm of the vector.',
    block_verb_core_vector_normalized_input_vector: 'Normalize vector',
    block_verb_core_vector_normalized_description: 'Returns normalized vector of length 1.',
    block_verb_core_vector_on_ray_input_vector: 'Along vector',
    block_verb_core_vector_on_ray_input_point: 'Move point',
    block_verb_core_vector_on_ray_input_distance: 'By distance',
    block_verb_core_vector_on_ray_description: 'Moves a point along the vector by a given distance.',
    block_verb_core_vector_positive_angle_between_input_first: 'Positive angle between vector',
    block_verb_core_vector_positive_angle_between_input_second: 'Second vector',
    block_verb_core_vector_positive_angle_between_input_reference: 'Reference vector',
    block_verb_core_vector_positive_angle_between_description: 'Returns positive angle between two vectors and a reference direction.',
    block_verb_core_vector_signed_angle_between_input_first: 'Signed angle between vector',
    block_verb_core_vector_signed_angle_between_input_second: 'Second vector',
    block_verb_core_vector_signed_angle_between_input_reference: 'Reference vector',
    block_verb_core_vector_signed_angle_between_description: 'Returns signed angle between two vectors and a reference direction.',
    block_verb_core_vector_range_input_max: 'Range to maximum bound',
    block_verb_core_vector_range_description: 'Populates array of numbers between 0 and maximum provided integer bound.',
    block_verb_core_vector_span_input_min: 'Span of numbers between min',
    block_verb_core_vector_span_input_max: 'And max',
    block_verb_core_vector_span_input_step: 'At step',
    block_verb_core_vector_span_description: 'Populates the array of numbers between minimum and maximum values at a given step.',
    block_verb_core_vector_sum_input_vector: 'Sum all elements of a vector',
    block_verb_core_vector_sum_description: 'Sums all of the elements of a vector.',
    block_verb_geometry_nurbs_curve_by_knots_control_points_weights_input_knots: 'Curve by knots',
    block_verb_geometry_nurbs_curve_by_knots_control_points_weights_input_control_points: 'Control points',
    block_verb_geometry_nurbs_curve_by_knots_control_points_weights_input_weights: 'Weights',
    block_verb_geometry_nurbs_curve_by_knots_control_points_weights_input_degree: 'Of degree',
    block_verb_geometry_nurbs_curve_by_knots_control_points_weights_description: 'Creates a curve of degree by knots, control points and weights.',
    block_verb_geometry_nurbs_curve_by_points_inputs_points: 'Curve through points',
    block_verb_geometry_nurbs_curve_by_points_inputs_degree: 'Of degree',
    block_verb_geometry_nurbs_curve_by_points_description: 'Create a curve that goes through points.',
    block_verb_geometry_nurbs_curve_clone_input_curve: 'Clone the curve',
    block_verb_geometry_nurbs_curve_clone_description: 'Clones the curve.',
    block_verb_geometry_nurbs_curve_closest_param_input_curve: 'Closest parameter on the curve',
    block_verb_geometry_nurbs_curve_closest_param_input_point: 'From point',
    block_verb_geometry_nurbs_curve_closest_param_description: 'Finds closest parameter on the curve from point.',
    block_verb_geometry_nurbs_curve_closest_params_input_curve: 'Closest parameters on the curve',
    block_verb_geometry_nurbs_curve_closest_params_input_points: 'From points',
    block_verb_geometry_nurbs_curve_closest_params_description: 'Finds the closest parameters on the curve from a list of points.',
    block_verb_geometry_nurbs_curve_closest_point_input_curve: 'Closest point on the curve',
    block_verb_geometry_nurbs_curve_closest_point_input_point: 'From point',
    block_verb_geometry_nurbs_curve_closest_point_description: 'Finds closest point on the curve from point.',
    block_verb_geometry_nurbs_curve_closest_points_input_curve: 'Closest points on the curve',
    block_verb_geometry_nurbs_curve_closest_points_input_points: 'From points',
    block_verb_geometry_nurbs_curve_closest_points_description: 'Finds the closest points on the curve from a list of points.',
    block_verb_geometry_nurbs_curve_degree_input_curve: 'Degree of the curve',
    block_verb_geometry_nurbs_curve_degree_description: 'Returns the degree of the curve.',
    block_verb_geometry_nurbs_curve_derivatives_input_curve: 'Derivatives of the curve',
    block_verb_geometry_nurbs_curve_derivatives_input_parameter: 'At parameter',
    block_verb_geometry_nurbs_curve_derivatives_input_num_derivatives: 'Number of derivatives',
    block_verb_geometry_nurbs_curve_derivatives_description: 'Gets the derivatives of the curve.',
    block_verb_geometry_nurbs_curve_divide_by_equal_arc_length_params_input_curve: 'Divide the curve to parameters',
    block_verb_geometry_nurbs_curve_divide_by_equal_arc_length_params_input_subdivison_number: 'By number of segments',
    block_verb_geometry_nurbs_curve_divide_by_equal_arc_length_params_description: 'Subdivides a curve by equal arc length to a number of segments and returns parameters.',
    block_verb_geometry_nurbs_curve_divide_by_equal_arc_length_points_input_curve: 'Divide the curve to points',
    block_verb_geometry_nurbs_curve_divide_by_equal_arc_length_points_input_subdivison_number: 'By number of segments',
    block_verb_geometry_nurbs_curve_divide_by_equal_arc_length_points_description: 'Subdivides a curve by equal arc length to a number of segments and returns points.',
    block_verb_geometry_nurbs_curve_divide_by_arc_length_params_input_curve: 'Subdivide the curve to parameters',
    block_verb_geometry_nurbs_curve_divide_by_arc_length_params_input_arc_length: 'By arc length',
    block_verb_geometry_nurbs_curve_divide_by_arc_length_params_description: 'Subdivides the curve to parameters by arc length.',
    block_verb_geometry_nurbs_curve_divide_by_arc_length_points_input_curve: 'Subdivide the curve to points',
    block_verb_geometry_nurbs_curve_divide_by_arc_length_points_input_arc_length: 'By arc length',
    block_verb_geometry_nurbs_curve_divide_by_arc_length_points_description: 'Subdivides the curve to points by arc length.',
    block_verb_geometry_nurbs_curves_divide_by_equal_arc_length_points_input_curves: 'Divide the curves to points',
    block_verb_geometry_nurbs_curves_divide_by_equal_arc_length_points_input_subdivison_number: 'By number of segments',
    block_verb_geometry_nurbs_curves_divide_by_equal_arc_length_points_description: 'Subdivides the curves by equal arc length to a number of segments and returns points.',
    block_verb_geometry_nurbs_curves_divide_by_arc_length_points_input_curves: 'Subdivide the curves to points',
    block_verb_geometry_nurbs_curves_divide_by_arc_length_points_input_arc_length: 'By arc length',
    block_verb_geometry_nurbs_curves_divide_by_arc_length_points_description: 'Subdivides the curves to points by arc length.',
    block_verb_geometry_nurbs_curve_domain_input_curve: 'Domain of the curve',
    block_verb_geometry_nurbs_curve_domain_description: 'Returns the domain of the curve.',
    block_verb_geometry_nurbs_curve_knots_input_curve: 'Knots of the curve',
    block_verb_geometry_nurbs_curve_knots_description: 'Returns the knots of the curve.',
    block_verb_geometry_nurbs_curve_length_input_curve: 'Length of the curve',
    block_verb_geometry_nurbs_curve_length_description: 'Returns the length of the curve.',
    block_verb_geometry_nurbs_curve_length_at_param_input_curve: 'Length of the curve',
    block_verb_geometry_nurbs_curve_length_at_param_input_param: 'At parameter',
    block_verb_geometry_nurbs_curve_length_at_param_description: 'Gives back a length of the curve at parameter',
    block_verb_geometry_nurbs_curve_param_at_length_input_curve: 'Parameter on the curve',
    block_verb_geometry_nurbs_curve_param_at_length_input_length: 'At length',
    block_verb_geometry_nurbs_curve_param_at_length_input_tolerance: 'With tolerance',
    block_verb_geometry_nurbs_curve_param_at_length_description: 'Returns a parameter of the curve at a given length.',
    block_verb_geometry_nurbs_curve_reverse_input_curve: 'Reverse the curve',
    block_verb_geometry_nurbs_curve_reverse_description: 'Reverses the curve.',
    block_verb_geometry_nurbs_curve_split_input_curve: 'Split the curve',
    block_verb_geometry_nurbs_curve_split_input_param: 'At parameter',
    block_verb_geometry_nurbs_curve_split_description: 'Splits the curve to two parts at parameter and if successfult returns a list of two curves.',
    block_verb_geometry_nurbs_curve_tangent_input_curve: 'Tangent of curve',
    block_verb_geometry_nurbs_curve_tangent_input_param: 'At parameter',
    block_verb_geometry_nurbs_curve_tangent_description: 'Returns a tangent vector of the curve at parameter.',
    block_verb_geometry_nurbs_curve_tessellate_input_curve: 'Tessellate the curve',
    block_verb_geometry_nurbs_curve_tessellate_input_tolerance: 'With tolerance',
    block_verb_geometry_nurbs_curve_tessellate_description: 'Tessellate the curve to points with tolerance.',
    block_verb_geometry_nurbs_curve_weights_input_curve: 'Weights of the curve',
    block_verb_geometry_nurbs_curve_weights_description: 'Returns the weights of the curve.',
    block_verb_geometry_nurbs_surface_boundaries_input_surface: 'Boundary curves of the surface',
    block_verb_geometry_nurbs_surface_boundaries_description: 'Returns 4 boundary curves of the surface',
    block_verb_geometry_nurbs_surface_by_corners_input_point1: 'Surface with first corner point',
    block_verb_geometry_nurbs_surface_by_corners_input_point2: 'Second corner point',
    block_verb_geometry_nurbs_surface_by_corners_input_point3: 'Third corner point',
    block_verb_geometry_nurbs_surface_by_corners_input_point4: 'Fourth corner point',
    block_verb_geometry_nurbs_surface_by_corners_description: 'Constructs nurbs surface by 4 corner points.',
    block_verb_geometry_nurbs_surface_by_knots_control_points_weights_input_knots_u: 'Surface by knots u',
    block_verb_geometry_nurbs_surface_by_knots_control_points_weights_input_knots_v: 'knots v',
    block_verb_geometry_nurbs_surface_by_knots_control_points_weights_input_points: 'points',
    block_verb_geometry_nurbs_surface_by_knots_control_points_weights_input_weights: 'weights',
    block_verb_geometry_nurbs_surface_by_knots_control_points_weights_input_degree_u: 'degree u',
    block_verb_geometry_nurbs_surface_by_knots_control_points_weights_input_degree_v: 'degree v',
    block_verb_geometry_nurbs_surface_by_knots_control_points_weights_description: 'Creates a surface by uv knots, control points, weights and uv degrees.',
    block_verb_geometry_nurbs_surface_by_lofting_curves_input_curves: 'Surface by lofting curves',
    block_verb_geometry_nurbs_surface_by_lofting_curves_input_degree_v: 'Of degree v',
    block_verb_geometry_nurbs_surface_by_lofting_curves_description: 'Lofts curves to form a surface.',
    block_verb_geometry_nurbs_surface_clone_input_surface: 'Clone the surface',
    block_verb_geometry_nurbs_surface_clone_description: 'Clones the surface.',
    block_verb_geometry_nurbs_surface_closest_param_input_surface: 'Closest parameter on the surface',
    block_verb_geometry_nurbs_surface_closest_param_input_point: 'From point',
    block_verb_geometry_nurbs_surface_closest_param_description: 'Finds the closest uv parameter on the surface from a point',
    block_verb_geometry_nurbs_surface_closest_point_input_surface: 'Closest point on the surface',
    block_verb_geometry_nurbs_surface_closest_point_input_point: 'From point',
    block_verb_geometry_nurbs_surface_closest_point_description: 'Finds the closest point on the surface.',
    block_verb_geometry_nurbs_surface_control_points_input_surface: 'Control points of the surface',
    block_verb_geometry_nurbs_surface_control_points_description: 'Gets control points of the surface',
    block_verb_geometry_nurbs_surface_degree_u_input_surface: 'Degree u of the surface',
    block_verb_geometry_nurbs_surface_degree_u_points_description: 'Gets the u degree of the surface',
    block_verb_geometry_nurbs_surface_degree_v_input_surface: 'Degree v of the surface',
    block_verb_geometry_nurbs_surface_degree_v_points_description: 'Gets the v degree of the surface',
    block_verb_geometry_nurbs_surface_derivatives_input_surface: 'Derivatives of the surface',
    block_verb_geometry_nurbs_surface_derivatives_input_u: 'At parameter u',
    block_verb_geometry_nurbs_surface_derivatives_input_v: 'And parameter v',
    block_verb_geometry_nurbs_surface_derivatives_input_num_derivatives: 'Number of derivatives',
    block_verb_geometry_nurbs_surface_derivatives_description: 'Gets specified amoung ot derivatives of the surface at uv coordinates.',
    block_verb_geometry_nurbs_surface_domain_u_input_surface: 'U domain of the surface',
    block_verb_geometry_nurbs_surface_domain_u_description: 'Gets the u domain of the surface in a form of the interval.',
    block_verb_geometry_nurbs_surface_domain_v_input_surface: 'V domain of the surface',
    block_verb_geometry_nurbs_surface_domain_v_description: 'Gets the v domain of the surface in a form of the interval.',
    block_verb_geometry_nurbs_surface_isocurve_input_surface: 'Isocurve on the surface',
    block_verb_geometry_nurbs_surface_isocurve_input_parameter: 'At parameter',
    block_verb_geometry_nurbs_surface_isocurve_input_use_v: 'Use v parameter',
    block_verb_geometry_nurbs_surface_isocurve_description: 'Gets the isocurve of the surface at u or v parameters.',
    block_verb_geometry_nurbs_surface_knots_u_input_surface: 'Knots u of the surface',
    block_verb_geometry_nurbs_surface_knots_u_description: 'Gets u knots of the surface',
    block_verb_geometry_nurbs_surface_knots_v_input_surface: 'Knots v of the surface',
    block_verb_geometry_nurbs_surface_knots_v_description: 'Gets v knots of the surface',
    block_verb_geometry_nurbs_surface_normal_input_surface: 'Normal of the surface',
    block_verb_geometry_nurbs_surface_normal_input_u: 'At u coordinate',
    block_verb_geometry_nurbs_surface_normal_input_v: 'And v coordinate',
    block_verb_geometry_nurbs_surface_normal_description: 'Gets the normal of the surface at uv coordinates',
    block_verb_geometry_nurbs_surface_point_input_surface: 'Point on the surface',
    block_verb_geometry_nurbs_surface_point_input_u: 'At u coordinate',
    block_verb_geometry_nurbs_surface_point_input_v: 'And v coordinate',
    block_verb_geometry_nurbs_surface_point_description: 'Gets the point of the surface at uv coordinates.',
    block_verb_geometry_nurbs_surface_reverse_input_surface: 'Reverse the surface',
    block_verb_geometry_nurbs_surface_reverse_description: 'Reverses the surface uv direction.',
    block_verb_geometry_nurbs_surface_split_input_surface: 'Split the surface',
    block_verb_geometry_nurbs_surface_split_input_parameter: 'At parameter',
    block_verb_geometry_nurbs_surface_split_input_use_v: 'Use v parameter',
    block_verb_geometry_nurbs_surface_split_description: 'Splits the surface at u or v parameters.',
    block_verb_geometry_nurbs_surface_weights_input_surface: 'Weights of the surface',
    block_verb_geometry_nurbs_surface_weights_description: 'Returns the weights of the surface.',
    block_verb_geometry_spherical_surface_input_center: 'Spherical surface center',
    block_verb_geometry_spherical_surface_input_radius: 'Radius',
    block_verb_geometry_spherical_surface_description: 'Creates spherical surface of given radius.',
    block_verb_geometry_spherical_surface_center_input_sphere: 'Center of the sphere',
    block_verb_geometry_spherical_surface_center_description: 'Returns the center point of the sphere',
    block_verb_geometry_spherical_surface_radius_input_sphere: 'Radius of the sphere',
    block_verb_geometry_spherical_surface_radius_description: 'Returns the radius point of the sphere',
    block_verb_geometry_nurbs_curve_circle_input_center: 'Circle with center',
    block_verb_geometry_nurbs_curve_circle_input_x_axis: 'X axis',
    block_verb_geometry_nurbs_curve_circle_input_y_axis: 'Y axis',
    block_verb_geometry_nurbs_curve_circle_input_radius: 'Radius',
    block_verb_geometry_nurbs_curve_circle_description: 'Creates a circle in space of a given radius',
    block_verb_geometry_nurbs_curve_arc_input_center: 'Arc with center',
    block_verb_geometry_nurbs_curve_arc_input_x_axis: 'X axis',
    block_verb_geometry_nurbs_curve_arc_input_y_axis: 'Y axis',
    block_verb_geometry_nurbs_curve_arc_input_radius: 'Radius',
    block_verb_geometry_nurbs_curve_arc_input_min_angle: 'Minimum angle',
    block_verb_geometry_nurbs_curve_arc_input_max_angle: 'Maximum angle',
    block_verb_geometry_nurbs_curve_arc_description: 'Creates the arc of given radius, minimum and maximum angles around a center in xy plane',
    block_verb_geometry_nurbs_curve_circle_radius_input_circle: 'Radius of the arc or circle',
    block_verb_geometry_nurbs_curve_circle_radius_description: 'Gets the radius of the arc or circle.',
    block_verb_geometry_nurbs_curve_circle_center_input_circle: 'Center of the arc or circle',
    block_verb_geometry_nurbs_curve_circle_center_description: 'Gets the center of the arc or a circle',
    block_verb_geometry_nurbs_curve_circle_x_axis_input_circle: 'X axis of the arc or circle',
    block_verb_geometry_nurbs_curve_circle_x_axis_description: 'Gets the x axis of the arc or a circle',
    block_verb_geometry_nurbs_curve_circle_y_axis_input_circle: 'Y axis of the arc or circle',
    block_verb_geometry_nurbs_curve_circle_y_axis_description: 'Gets the y axis of the arc or a circle',
    block_verb_geometry_nurbs_curve_circle_min_angle_input_circle: 'Minimum angle of the arc',
    block_verb_geometry_nurbs_curve_circle_min_angle_description: 'Gets the minimum angle of the arc',
    block_verb_geometry_nurbs_curve_circle_max_angle_input_circle: 'Maximum angle of the arc',
    block_verb_geometry_nurbs_curve_circle_max_angle_description: 'Gets the maximum angle of the arc',
    block_verb_geometry_bezier_curve_inputs_points: 'Bezier curve with points',
    block_verb_geometry_bezier_curve_inputs_weights: 'Weights',
    block_verb_geometry_bezier_curve_description: 'Constructs Bezier curve by points and weights.',
    block_verb_geometry_nurbs_curve_ellipse_arc_input_center: 'Ellipse arc with center',
    block_verb_geometry_nurbs_curve_ellipse_arc_input_x_axis: 'X axis',
    block_verb_geometry_nurbs_curve_ellipse_arc_input_y_axis: 'Y axis',
    block_verb_geometry_nurbs_curve_ellipse_arc_input_min_angle: 'Minimum angle',
    block_verb_geometry_nurbs_curve_ellipse_arc_input_max_angle: 'Maximum angle',
    block_verb_geometry_nurbs_curve_ellipse_arc_description: 'Creates the ellipse arc with different xy axis lengths, minimum and maximum angles around a center.',
    block_verb_geometry_nurbs_curve_ellipse_input_center: 'Ellipse with center',
    block_verb_geometry_nurbs_curve_ellipse_input_x_axis: 'X axis',
    block_verb_geometry_nurbs_curve_ellipse_input_y_axis: 'Y axis',
    block_verb_geometry_nurbs_curve_ellipse_description: 'Creates the ellipse with different xy axis lengths around a center.',
    block_verb_geometry_nurbs_curve_ellipse_center_input_ellipse: 'Center of the ellipse or its arc',
    block_verb_geometry_nurbs_curve_ellipse_center_description: 'Gets the center of the ellipse or its arc',
    block_verb_geometry_nurbs_curve_ellipse_x_axis_input_ellipse: 'X axis of the ellipse or its arc',
    block_verb_geometry_nurbs_curve_ellipse_x_axis_description: 'Gets the x axis of the ellipse or its arc',
    block_verb_geometry_nurbs_curve_ellipse_y_axis_input_ellipse: 'Y axis of the ellipse or its arc',
    block_verb_geometry_nurbs_curve_ellipse_y_axis_description: 'Gets the y axis of the ellipse or its arc',
    block_verb_geometry_nurbs_curve_ellipse_min_angle_input_ellipse: 'Minimum angle of the ellipse arc',
    block_verb_geometry_nurbs_curve_ellipse_min_angle_description: 'Gets the minimum angle of the ellipse arc',
    block_verb_geometry_nurbs_curve_ellipse_max_angle_input_ellipse: 'Maximum angle of the ellipse arc',
    block_verb_geometry_nurbs_curve_ellipse_max_angle_description: 'Gets the maximum angle of the ellipse arc',
    block_verb_geometry_conical_surface_input_axis: 'Cone on the axis',
    block_verb_geometry_conical_surface_input_base: 'Base',
    block_verb_geometry_conical_surface_input_x_axis: 'X axis',
    block_verb_geometry_conical_surface_input_radius: 'Radius',
    block_verb_geometry_conical_surface_input_height: 'Height',
    block_verb_geometry_conical_surface_description: 'Constructs a cone surface.',
    block_verb_geometry_conical_surface_base_input_cone: 'Base of the cone',
    block_verb_geometry_conical_surface_base_description: 'Gets the base point of the cone.',
    block_verb_geometry_conical_surface_axis_input_cone: 'Axis of the cone',
    block_verb_geometry_conical_surface_axis_description: 'Gets the main axis of the cone.',
    block_verb_geometry_conical_surface_x_axis_input_cone: 'X axis of the cone',
    block_verb_geometry_conical_surface_x_axis_description: 'Gets the x axis of the cone.',
    block_verb_geometry_conical_surface_radius_input_cone: 'Radius of the cone',
    block_verb_geometry_conical_surface_radius_description: 'Gets the radius of the cone.',
    block_verb_geometry_conical_surface_height_input_cone: 'Height of the cone',
    block_verb_geometry_conical_surface_height_description: 'Gets the height of the cone.',
    block_verb_geometry_extruded_surface_input_profile: 'Extrude profile curve',
    block_verb_geometry_extruded_surface_input_direction: 'Along dirction',
    block_verb_geometry_extruded_surface_description: 'Extrudes the profile curve along given direction and creates a surface.',
    block_verb_geometry_extruded_surface_direction_input_extrusion: 'Direction of the extrusion',
    block_verb_geometry_extruded_surface_direction_description: 'Gets the direction of extruded surface.',
    block_verb_geometry_extruded_surface_profile_input_extrusion: 'Profile of the extrusion',
    block_verb_geometry_extruded_surface_profile_description: 'Gets the profile of extruded surface.',
    block_verb_geometry_cylindrical_surface_input_axis: 'Cylinder on the axis',
    block_verb_geometry_cylindrical_surface_input_base: 'Base',
    block_verb_geometry_cylindrical_surface_input_x_axis: 'X axis',
    block_verb_geometry_cylindrical_surface_input_radius: 'Radius',
    block_verb_geometry_cylindrical_surface_input_height: 'Height',
    block_verb_geometry_cylindrical_surface_description: 'Constructs a cylinder surface.',
    block_verb_geometry_cylindrical_surface_base_input_cylinder: 'Base of the cylinder',
    block_verb_geometry_cylindrical_surface_base_description: 'Gets the base point of the cylinder.',
    block_verb_geometry_cylindrical_surface_axis_input_cylinder: 'Axis of the cylinder',
    block_verb_geometry_cylindrical_surface_axis_description: 'Gets the main axis of the cylinder.',
    block_verb_geometry_cylindrical_surface_x_axis_input_cylinder: 'X axis of the cylinder',
    block_verb_geometry_cylindrical_surface_x_axis_description: 'Gets the x axis of the cylinder.',
    block_verb_geometry_cylindrical_surface_radius_input_cylinder: 'Radius of the cylinder',
    block_verb_geometry_cylindrical_surface_radius_description: 'Gets the radius of the cylinder.',
    block_verb_geometry_cylindrical_surface_height_input_cylinder: 'Height of the cylinder',
    block_verb_geometry_cylindrical_surface_height_description: 'Gets the height of the cylinder.',
    block_verb_geometry_revolved_surface_input_profile: 'Revolve profile',
    block_verb_geometry_revolved_surface_input_center: 'On center',
    block_verb_geometry_revolved_surface_input_axis: 'Around axis',
    block_verb_geometry_revolved_surface_input_angle: 'In an angle',
    block_verb_geometry_revolved_surface_description: 'Revolves the profile curve around an axis in an angle.',
    block_verb_geometry_revolved_surface_center_input_revolution: 'Revolved surface center',
    block_verb_geometry_revolved_surface_center_description: 'Gets the center of revolved surface.',
    block_verb_geometry_revolved_surface_axis_input_revolution: 'Revolved surface axis',
    block_verb_geometry_revolved_surface_axis_description: 'Gets the revolution axis of revolved surface.',
    block_verb_geometry_revolved_surface_profile_input_revolution: 'Revolved surface profile',
    block_verb_geometry_revolved_surface_profile_description: 'Gets the profile curve of revolved surface.',
    block_verb_geometry_revolved_surface_angle_input_revolution: 'Revolved surface angle',
    block_verb_geometry_revolved_surface_angle_description: 'Gets the revolution angle of revolved surface',
    block_verb_geometry_swept_surface_input_profile: 'Sweep profile curve',
    block_verb_geometry_swept_surface_input_rail: 'Along the rail',
    block_verb_geometry_swept_surface_description: 'Sweeps the profile curve along rail.',
    block_verb_geometry_swept_surface_profile_input_sweep: 'Profile of swept surface',
    block_verb_geometry_swept_surface_profile_description: 'Returns profile curve of swept surface.',
    block_verb_geometry_swept_surface_rail_input_sweep: 'Rail of swept surface',
    block_verb_geometry_swept_surface_rail_description: 'Returns rail curve of swept surface.',
    block_base_geom_point_spiral_input_phi: 'Phi parameter',
    block_base_geom_point_spiral_input_increase: 'Widening index',
    block_base_geom_point_spiral_input_factor: 'Spiral with factor',
    block_base_geom_point_spiral_input_radius: 'Radius',
    block_base_geom_point_spiral_input_number_points: 'Amount of points',
    block_base_geom_point_spiral_description: 'Constructs a list of points in spiral',
    block_base_geometry_lines_input_start_points: 'Lines with start points',
    block_base_geometry_lines_input_end_points: 'And endpoints',
    block_base_geometry_lines_description: 'Creates a list of lines from start points to end points.',
    block_base_geometry_point_list_input_point: 'Point to multiply',
    block_base_geometry_point_list_input_amount_of_points: 'Amount of points',
    block_base_geometry_point_list_description: 'Creates a list of points at the same xyz coordinate.',
    block_verb_geometry_intersect_curve_curve_input_first_curve: 'Intersect curve',
    block_verb_geometry_intersect_curve_curve_input_second_curve: 'With curve',
    block_verb_geometry_intersect_curve_curve_input_tolerance: 'And tolerance',
    block_verb_geometry_intersect_curve_curve_description: 'Intersects two curves and returns the curve intersection results.',
    block_verb_geometry_intersect_curve_surface_input_curve: 'Intersect curve',
    block_verb_geometry_intersect_curve_surface_input_surface: 'With surface',
    block_verb_geometry_intersect_curve_surface_description: 'Intersects a curve with a surface and returns interserction results',
    block_verb_geometry_intersect_surface_surface_input_curve: 'Intersect surface',
    block_verb_geometry_intersect_surface_surface_input_surface: 'With surface',
    block_verb_geometry_intersect_surface_surface_description: 'Intersects the surface with another surface and returns interserction results',
    block_base_geometry_lines_convert_to_nurbs_curves: 'Curves from lines',
    block_base_geometry_lines_convert_to_nurbs_curves_description: 'Converts multiple lines to multiple curves.',
    block_verb_geometry_intersect_curve_curve_first_params_input_intersections: 'Params on first curve of curve-curve intersection',
    block_verb_geometry_intersect_curve_curve_first_params_description: 'Returns parameters on first curve from the two curve intersections.',
    block_verb_geometry_intersect_curve_curve_second_params_input_intersections: 'Params on second curve on curve-curve intersection',
    block_verb_geometry_intersect_curve_curve_second_params_description: 'Returns parameters on second curve from the two curve intersections.',
    block_verb_geometry_intersect_curve_curve_first_points_input_intersections: 'Points on first curve of curve-curve intersection',
    block_verb_geometry_intersect_curve_curve_first_points_description: 'Returns points on first curve from the two curve intersections.',
    block_verb_geometry_intersect_curve_curve_second_points_input_intersections: 'Points on second curve of curve-curve intersection',
    block_verb_geometry_intersect_curve_curve_second_points_description: 'Returns points on second curve from the two curve intersections.',
    block_verb_geometry_intersect_curve_surface_curve_params_input_intersections: 'Params on curve of curve-surface intersection',
    block_verb_geometry_intersect_curve_surface_curve_params_description: 'Returns parameters on the curve from curve and surface intersection.',
    block_verb_geometry_intersect_curve_surface_surface_params_input_intersections: 'Params on surface of curve-surface intersection',
    block_verb_geometry_intersect_curve_surface_surface_params_description: 'Returns parameters on the surface from curve and surface intersection.',
    block_verb_geometry_intersect_curve_surface_curve_points_input_intersections: 'Points on curve of curve-surface intersection',
    block_verb_geometry_intersect_curve_surface_curve_points_description: 'Returns points on the curve from curve and surface intersection.',
    block_verb_geometry_intersect_curve_surface_surface_points_input_intersections: 'Points on surface of curve-surface intersection',
    block_verb_geometry_intersect_curve_surface_surface_points_description: 'Returns points on the surface from curve and surface intersection.',
    block_base_geometry_lines_between_points_input_points: 'Lines between points',
    block_base_geometry_lines_between_points_description: 'Creates line segments between points.',
    block_base_lists_group_list_elements_input_list: 'List to group',
    block_base_lists_group_list_elements_input_segmented: 'Segmented',
    block_base_lists_group_list_elements_input_number_of_elements: 'Number of elements per group',
    block_base_lists_group_list_elements_description: 'Groups list into small groups of given element size. If segmented option is chosen, last element of every group will become first element of the next group. This increases the total amount of elements.',
    block_verb_geometry_nurbs_curve_point_at_param_input_curve: 'Point on curve',
    block_verb_geometry_nurbs_curve_point_at_param_input_param: 'At parameter',
    block_verb_geometry_nurbs_curve_point_at_param_description: 'Gets the point on curve at parameter.',
    block_verb_geometry_nurbs_curves_points_at_param_input_curve: 'Points on curves',
    block_verb_geometry_nurbs_curves_points_at_param_input_param: 'At parameter',
    block_verb_geometry_nurbs_curves_points_at_param_description: 'Gets the points on curves at parameter.',
    block_verb_geometry_nurbs_curve_start_point_input_curve: 'Start point of the curve',
    block_verb_geometry_nurbs_curve_start_point_description: 'Gets the start point of the curve.',
    block_verb_geometry_nurbs_curve_end_point_input_curve: 'End point of the curve',
    block_verb_geometry_nurbs_curve_end_point_description: 'Gets the end point of the curve',
    block_babylon_draw_surfaces_colours_input_surfaces: 'Draw',
    block_babylon_draw_surfaces_colours_input_surfaces_variable: 'surfaceMeshes',
    block_babylon_draw_surfaces_colours_input_surfaces_2: 'with surfaces',
    block_babylon_draw_surfaces_colours_input_colours: 'Colours',
    block_babylon_draw_surfaces_colours_input_opacity: 'Opacity',
    block_babylon_draw_surfaces_colours_description: 'Draws surfaces with multiple matching colours. Number of surfaces must equal number of colours provided.',
    block_base_math_remap_number_input_number_to_remap: 'Remap the number',
    block_base_math_remap_number_input_source_interval: 'Source interval',
    block_base_math_remap_number_input_target_interval: 'Target interval',
    block_base_math_remap_number_description: 'Remaps the number that fits in source interval to a new target interval.',
    block_verb_geometry_nurbs_curves_start_points_input_curve: 'Start points of the curves',
    block_verb_geometry_nurbs_curves_start_points_description: 'Gets the start points of the curves.',
    block_verb_geometry_nurbs_curves_end_points_input_curve: 'End points of the curves',
    block_verb_geometry_nurbs_curves_end_points_description: 'Gets the end points of the curves.',
    block_base_io_print_save_input_text: 'Preview text and save to file',
    block_base_io_print_save_description: 'Print and save the text to a file of chosen extension. This allows you to export various kinds of prepared information to formats like csv, gcode or others.',
    block_base_io_save_input_text: 'Save text to file',
    block_base_io_save_description: 'Saves text to a file and allows you to choose the name and extension. This component does not preview the text and can be used in situations where text may be too big to edit in text area field.',
    block_base_io_import_text_file_input_text_file: 'Import text file',
    block_base_io_import_text_file_description: 'Asynchronous method that imports a selected text file of any format, reads the contents and returns a string when promise is resolved.',
    block_base_time_catch_input_promise_one: 'When the',
    block_base_time_catch_var_error: 'error',
    block_base_time_catch_input_promise_two: 'happens in the promise',
    block_base_time_catch_statement_catch: 'Catch',
    block_base_time_catch_description: 'Catches the error that may happen while running asynchronous code. User can choose to handle errors appropriately.',
    block_base_time_then_input_promise_one: 'When the',
    block_base_time_then_var_result: 'result',
    block_base_time_then_input_promise_two: 'of promise is returned',
    block_base_time_then_statement_catch: 'Then',
    block_base_time_then_description: 'When asynchronous code finishes execution, this component can be used to continue further steps that are dependant on it.',
    block_base_io_http_get_input_url: 'Http get url',
    block_base_io_http_get_input_options: 'Options',
    block_base_io_http_get_description: 'Http get with options.',
    block_base_io_http_put_input_url: 'Http put url',
    block_base_io_http_put_input_body: 'Body',
    block_base_io_http_put_input_options: 'Options',
    block_base_io_http_put_description: 'Http put with options.',
    block_base_io_http_patch_input_url: 'Http patch url',
    block_base_io_http_patch_input_body: 'Body',
    block_base_io_http_patch_input_options: 'Options',
    block_base_io_http_patch_description: 'Http patch with options.',
    block_base_io_http_post_input_url: 'Http post url',
    block_base_io_http_post_input_body: 'Body',
    block_base_io_http_post_input_options: 'Options',
    block_base_io_http_post_description: 'Http post with options.',
    block_base_io_http_delete_input_url: 'Http delete url',
    block_base_io_http_delete_input_options: 'Options',
    block_base_io_http_delete_description: 'Http delete with options.',
    block_base_io_http_options_input_headers: 'Http options with headers',
    block_base_io_http_options_input_params: 'Params',
    block_base_io_http_options_input_with_credentials: 'With credentials',
    block_base_io_http_options_description: 'Constructs http options. All inputs are optional, but if present will overrule the defaults.',
    block_base_io_http_header_input_name: 'Http header name',
    block_base_io_http_header_input_value: 'Value',
    block_base_io_http_header_description: 'Creates Http header with name and value that can be added to a list that is used in http options.',
    block_base_io_http_param_input_name: 'Http param name',
    block_base_io_http_param_input_value: 'Value',
    block_base_io_http_param_description: 'Creates Http parameter with name and value that can be added to a list that is used in http options.',
    block_base_io_json_path_query_input_json: 'Parse JSON',
    block_base_io_json_path_query_input_query: 'With query',
    block_base_io_json_path_query_description: 'Parses JSON object with json path query',
    block_base_io_json_set_path_value_input_json: 'Set JSON',
    block_base_io_json_set_path_value_input_path: 'Path',
    block_base_io_json_set_path_value_input_value: 'Value',
    block_base_io_json_set_path_value_description: 'Sets JSON value on the given path.',
    block_base_time_execute_later_input_timeout: 'Execute code after',
    block_base_time_execute_later_input_unit: 'second(s)',
    block_base_time_execute_later_statement_then: 'Then',
    block_base_time_execute_later_description: 'Executes a block of code after a given time given in seconds passes.',
    block_base_time_execute_at_interval_input_interval: 'Execute code every',
    block_base_time_execute_at_interval_input_unit: 'second(s)',
    block_base_time_execute_at_interval_statement_then: 'Then',
    block_base_time_execute_at_interval_description: 'Executes code at given interval in seconds.',
    block_base_time_execute_at_interval_with_handler_input_interval: 'Execute code every',
    block_base_time_execute_at_interval_with_handler_input_unit: 'second(s) and return handler',
    block_base_time_execute_at_interval_with_handler_statement_then: 'Then',
    block_base_time_execute_at_interval_with_handler_description: 'Executes code at given interval in seconds and returns the handler, which can be used to stop the interval.',
    block_base_time_clear_interval_input_interval_handler: 'Cancel the interval execution',
    block_base_time_clear_interval_description: 'Cancels the interval execution by providing the handler.',
    block_base_time_clear_timeout_input_timeout_handler: 'Cancel later execution',
    block_base_time_clear_timeout_description: 'Cancels the later execution that havent yet happened',
    block_base_io_json_empty_object_input_json: 'Empty JSON Object',
    block_base_io_json_empty_object_description: 'Creates and returns empty JSON object.',
    block_base_io_json_preview_input_json: 'Preview JSON object',
    block_base_io_json_preview_description: 'Previews and allows to save JSON object.',
    block_base_io_json_set_paths_values_input_json: 'Set JSON',
    block_base_io_json_set_paths_values_input_paths_values: 'Paths and values',
    block_base_io_json_set_paths_values_description: 'Set multiple JSON values on the given list of paths.',
    block_base_io_json_path_value_input_path: 'Path',
    block_base_io_json_path_value_input_value: 'JSON value',
    block_base_io_json_path_value_description: 'Constructs value and path mapping to be used when creating JSON object.',
    block_base_geometry_text_tag_input_text: 'Text tag',
    block_base_geometry_text_tag_input_position: 'On point',
    block_base_geometry_text_tag_input_color: 'Color',
    block_base_geometry_text_tag_input_size: 'Size',
    block_base_geometry_text_tag_input_adapt_depth: 'Adapt size to depth',
    block_base_geometry_text_tag_description: 'Creates a text tag in 3D space of given size and color.',
    block_base_geometry_draw_text_tags_input_text_tags: 'Draw text',
    block_base_geometry_draw_text_tags_input_text_tags_variable: 'tags',
    block_base_geometry_draw_text_tags_description: 'Draws a list of text tags',
    block_base_geometry_draw_text_tag_input_text_tag: 'Draw text',
    block_base_geometry_draw_text_tag_input_text_tag_variable: 'tag',
    block_base_geometry_draw_text_tag_description: 'Draws a single text tag',
    block_base_math_round_to_decimals_input_number_to_round: 'Round number',
    block_base_math_round_to_decimals_input_decimal_places: 'To decimal places',
    block_base_math_round_to_decimals_description: 'Rounds the number to decimal places.',
    block_base_math_random_input_random: 'Random 0 to 1',
    block_base_math_random_description: 'Generates a random number between 0 and 1',
    block_base_date_now_input_date: 'Date now',
    block_base_date_now_description: 'Creates the date at this moment.',
    block_base_date_parse_input_date: 'Unix timestamp of the date',
    block_base_date_parse_description: 'Parses the date to unix timestamp.',
    block_base_date_create_unix_timestamp_input_unix_timestamp: 'Date from unix timestamp',
    block_base_date_create_unix_timestamp_description: 'Creates the date from unix timestamp.',
    block_base_date_create_input_year: 'Date with year',
    block_base_date_create_input_month: 'Month',
    block_base_date_create_input_day: 'Day',
    block_base_date_create_input_hour: 'Hour',
    block_base_date_create_input_minute: 'Minute',
    block_base_date_create_input_second: 'Second',
    block_base_date_create_description: 'Creates the date from component parts of the year, month, day, hour, minute and a second.',
    block_base_date_create_utc_input_year: 'UTC Date with year',
    block_base_date_create_utc_input_month: 'Month',
    block_base_date_create_utc_input_day: 'Day',
    block_base_date_create_utc_input_hour: 'Hour',
    block_base_date_create_utc_input_minute: 'Minute',
    block_base_date_create_utc_input_second: 'Second',
    block_base_date_create_utc_description: 'Creates the UTC date from component parts of the year, month, day, hour, minute and a second.',
    block_base_date_get_date_input_date: 'Day of the date',
    block_base_date_get_date_description: 'Gets the day part of the date.',
    block_base_date_get_day_input_date: 'Week day of the date',
    block_base_date_get_day_description: 'Gets the week day of the date.',
    block_base_date_get_full_year_input_date: 'Full year of the date',
    block_base_date_get_full_year_description: 'Gets the full year of the date.',
    block_base_date_get_hours_input_date: 'Hours of the date',
    block_base_date_get_hours_description: 'Gets the hours of the date',
    block_base_date_get_milliseconds_input_date: 'Milliseconds of the date',
    block_base_date_get_milliseconds_description: 'Gets the milliseconds of the date',
    block_base_date_get_minutes_input_date: 'Minutes of the date',
    block_base_date_get_minutes_description: 'Gets the minutes of the date.',
    block_base_date_get_month_input_date: 'Month of the date',
    block_base_date_get_month_description: 'Gets the month of the date.',
    block_base_date_get_seconds_input_date: 'Seconds of the date',
    block_base_date_get_seconds_description: 'Gets the seconds of the date.',
    block_base_date_get_time_input_date: 'Time of the date',
    block_base_date_get_time_description: 'Gets the time of the date.',
    block_base_date_get_time_zone_offset_input_date: 'Time zone offset of the date',
    block_base_date_get_time_zone_offset_description: 'Gets the time zone of the date.',
    block_base_date_get_year_input_date: 'Year of the date',
    block_base_date_get_year_description: 'Gets the year of the date.',
    block_base_date_get_utc_date_input_date: 'UTC day of the date',
    block_base_date_get_utc_date_description: 'Gets utc day of the date.',
    block_base_date_get_utc_day_input_date: 'UTC week day of the year',
    block_base_date_get_utc_day_description: 'Gets UTC weekday of the year.',
    block_base_date_get_utc_full_year_input_date: 'UTC full year of the date',
    block_base_date_get_utc_full_year_description: 'Gets UTC full year of the date.',
    block_base_date_get_utc_hours_input_date: 'UTC hours of the date',
    block_base_date_get_utc_hours_description: 'Gets UTC hours of the date.',
    block_base_date_get_utc_milliseconds_input_date: 'UTC milliseconds of the date',
    block_base_date_get_utc_milliseconds_description: 'Gets UTC milliseconds of the date.',
    block_base_date_get_utc_minutes_input_date: 'UTC minutes of the date',
    block_base_date_get_utc_minutes_description: 'Gets UTC minutes of the date.',
    block_base_date_get_utc_month_input_date: 'UTC month of the date',
    block_base_date_get_utc_month_description: 'Gets UTC month of the date.',
    block_base_date_get_utc_seconds_input_date: 'UTC seconds of the date',
    block_base_date_get_utc_seconds_description: 'Gets UTC seconds of the date.',
    block_base_date_get_utc_year_input_date: 'UTC year of the date',
    block_base_date_get_utc_year_description: 'Gets UTC year of the date.',
    block_base_date_set_date_input_date: 'For date',
    block_base_date_set_date_input_day: 'Set the day',
    block_base_date_set_date_description: 'Sets the day part of the date.',
    block_base_date_set_day_input_date: 'For date',
    block_base_date_set_day_input_week_day: 'Set the week day',
    block_base_date_set_day_description: 'Sets the week day of the date.',
    block_base_date_set_full_year_input_date: 'For date',
    block_base_date_set_full_year_input_full_year: 'Set the full year',
    block_base_date_set_full_year_description: 'Sets the full year of the date.',
    block_base_date_set_hours_input_date: 'For date',
    block_base_date_set_hours_input_hours: 'Set the hours',
    block_base_date_set_hours_description: 'Sets the hours of the date',
    block_base_date_set_milliseconds_input_date: 'For date',
    block_base_date_set_milliseconds_input_milliseconds: 'Set the milliseconds',
    block_base_date_set_milliseconds_description: 'Sets the milliseconds of the date',
    block_base_date_set_minutes_input_date: 'For date',
    block_base_date_set_minutes_input_minutes: 'Set the minutes',
    block_base_date_set_minutes_description: 'Sets the minutes of the date.',
    block_base_date_set_month_input_date: 'For date',
    block_base_date_set_month_input_month: 'Set the month',
    block_base_date_set_month_description: 'Sets the month of the date.',
    block_base_date_set_seconds_input_date: 'For date',
    block_base_date_set_seconds_input_seconds: 'Set the seconds',
    block_base_date_set_seconds_description: 'Sets the seconds of the date.',
    block_base_date_set_time_input_date: 'For date',
    block_base_date_set_time_input_time: 'Set the time',
    block_base_date_set_time_description: 'Sets the time of the date.',
    block_base_date_set_year_input_date: 'For date',
    block_base_date_set_year_input_year: 'Set the year',
    block_base_date_set_year_description: 'Sets the year of the date.',
    block_base_date_set_utc_date_input_date: 'For UTC date',
    block_base_date_set_utc_date_input_day: 'Set the day',
    block_base_date_set_utc_date_description: 'Sets the day part of the UTC date.',
    block_base_date_set_utc_day_input_date: 'For UTC date',
    block_base_date_set_utc_day_input_week_day: 'Set the week day',
    block_base_date_set_utc_day_description: 'Sets the week day of the UTC date.',
    block_base_date_set_utc_full_year_input_date: 'For UTC date',
    block_base_date_set_utc_full_year_input_full_year: 'Set the full year',
    block_base_date_set_utc_full_year_description: 'Sets the full year of the UTC date.',
    block_base_date_set_utc_hours_input_date: 'For UTC date',
    block_base_date_set_utc_hours_input_hours: 'Set the hours',
    block_base_date_set_utc_hours_description: 'Sets the hours of the UTC date',
    block_base_date_set_utc_milliseconds_input_date: 'For UTC date',
    block_base_date_set_utc_milliseconds_input_milliseconds: 'Set the milliseconds',
    block_base_date_set_utc_milliseconds_description: 'Sets the milliseconds of the UTC date',
    block_base_date_set_utc_minutes_input_date: 'For UTC date',
    block_base_date_set_utc_minutes_input_minutes: 'Set the minutes',
    block_base_date_set_utc_minutes_description: 'Sets the minutes of the UTC date.',
    block_base_date_set_utc_month_input_date: 'For UTC date',
    block_base_date_set_utc_month_input_month: 'Set the month',
    block_base_date_set_utc_month_description: 'Sets the month of the UTC date.',
    block_base_date_set_utc_seconds_input_date: 'For UTC date',
    block_base_date_set_utc_seconds_input_seconds: 'Set the seconds',
    block_base_date_set_utc_seconds_description: 'Sets the seconds of the UTC date.',
    block_base_date_set_utc_time_input_date: 'For UTC date',
    block_base_date_set_utc_time_input_time: 'Set the time',
    block_base_date_set_utc_time_description: 'Sets the time of the UTC date.',
    block_base_date_set_utc_year_input_date: 'For UTC date',
    block_base_date_set_utc_year_input_year: 'Set the year',
    block_base_date_set_utc_year_description: 'Sets the year of the UTC date.',
    block_base_date_convert_to_string_input_date: 'Text from date',
    block_base_date_convert_to_string_description: 'Converts the date to text - Ex. "Wed Jul 28 1993 14:39:07 GMT+0200 (CEST)"',
    block_base_date_convert_to_iso_string_input_date: 'ISO text from date',
    block_base_date_convert_to_iso_string_description: 'Converts the date to ISO text - Ex. "2011-10-05T14:48:00.000Z"',
    block_base_date_convert_to_utc_string_input_date: 'UTC text from date',
    block_base_date_convert_to_utc_string_description: 'Converts the date to UTC text - Ex. "Wed, 14 Jun 2017 07:00:00 GMT"',
    block_base_date_convert_to_date_string_input_date: 'Date text from date',
    block_base_date_convert_to_date_string_description: 'Converts the date to date text - Ex. "Wed Jul 28 1993"',
    block_base_date_convert_to_time_string_input_date: 'Time text from date',
    block_base_date_convert_to_time_string_description: 'Converts the date to time text - Ex. "23:15:30 GMT+0200 (CEST)"',
    block_base_date_convert_to_json_input_date: 'JSON from date',
    block_base_date_convert_to_json_description: 'Converts the date to JSON object.',
    block_base_math_modulus_input_number: 'The number',
    block_base_math_modulus_input_modulus: 'Modulus',
    block_base_math_modulus_description: 'Computes the modulus value of the number.',
    block_base_clear_all_drawn_input_clear_all_drawn: 'Clear all drawn objects',
    block_base_clear_all_drawn_description: 'Clears all drawn objects from the canvas and frees memory.',
    block_babylon_node_from_rotation_input_origin: 'Create a node with origin',
    block_babylon_node_from_rotation_input_rotation: 'Rotation',
    block_babylon_node_from_rotation_input_parent: 'In a space of parent node',
    block_babylon_node_from_rotation_description: 'Creates a node in global or parent space.',
    block_babylon_node_world_input_world: 'New world node',
    block_babylon_node_world_description: 'Creates a new node based on the world node with xyz and rotations all on 0',
    block_babylon_node_get_root_input_root: 'Root node',
    block_babylon_node_get_root_description: 'Gets an existing default root node of the scene.',
    block_babylon_node_get_rotation_quaternion_input_node: 'Rotation quaternion for node',
    block_babylon_node_get_rotation_quaternion_description: 'Gets nodes\' rotation quaternion.',
    block_babylon_node_get_rotation_input_node: 'Rotation vector for node',
    block_babylon_node_get_rotation_description: 'Get nodes\' rotation vector in degrees for rotation around x, y and z axis.',
    block_babylon_node_get_absolute_position_input_node: 'Absolute position point for node',
    block_babylon_node_get_absolute_position_description: 'Get nodes\' absolute position point.',
    block_babylon_node_get_position_expressed_in_local_space_input_node: 'Position point expressed in local space for node',
    block_babylon_node_get_position_expressed_in_local_space_description: 'Get nodes\' position point expressed in local coordinate space.',
    block_babylon_node_get_absolute_rotation_quaternion_input_node: 'Absolute rotation quaternion for node',
    block_babylon_node_get_absolute_rotation_quaternion_description: 'Get absolute rotation quaternion from the node',
    block_babylon_node_get_absolute_up_vector_input_node: 'Absolute up (y) vector for node',
    block_babylon_node_get_absolute_up_vector_description: 'Get absolute up y vector in world space for the node.',
    block_babylon_node_get_absolute_right_vector_input_node: 'Absolute right (x) vector for node',
    block_babylon_node_get_absolute_right_vector_description: 'Get absolute right x vector in world space for the node.',
    block_babylon_node_get_absolute_forward_vector_input_node: 'Absolute forward (z) vector for node',
    block_babylon_node_get_absolute_forward_vector_description: 'Get absolute forward z vector in world space for the node.',
    block_babylon_node_rotate_input_node: 'Rotate node',
    block_babylon_node_rotate_input_axis: 'Around an axis vector',
    block_babylon_node_rotate_input_amount: 'And an angle',
    block_babylon_node_rotate_description: 'Rotates the node around provided axis and an angle.',
    block_babylon_node_rotate_around_input_node: 'Rotate node',
    block_babylon_node_rotate_around_position: 'Around position',
    block_babylon_node_rotate_around_input_axis: 'An axis vector',
    block_babylon_node_rotate_around_input_amount: 'And an angle',
    block_babylon_node_rotate_around_description: 'Rotates the node around provided point, axis and an angle.',
    block_babylon_node_set_absolute_position_input_node: 'For node',
    block_babylon_node_set_absolute_position_input_position: 'Set absolute position point',
    block_babylon_node_set_absolute_position_description: 'Sets the absolute position for the node based on worlds 0.',
    block_babylon_node_set_direction_input_node: 'For node',
    block_babylon_node_set_direction_input_direction: 'Set the direction vector',
    block_babylon_node_set_direction_description: 'Sets the direction for a node to provided local axis',
    block_babylon_node_set_parent_input_node: 'For node',
    block_babylon_node_set_parent_input_parent_node: 'Set parent node',
    block_babylon_node_set_parent_description: 'Sets the parent node for the given node',
    block_babylon_node_translate_input_node: 'Translate the node',
    block_babylon_node_translate_input_direction: 'Along direction',
    block_babylon_node_translate_input_distance: 'In distance',
    block_babylon_node_translate_description: 'Translates the node along direction in a given distance.',
    block_babylon_node_get_parent_input_node: 'Parent of the node',
    block_babylon_node_get_parent_description: 'Gets the parent node of the given node.',
    block_babylon_node_get_children_input_node: 'Children of the node',
    block_babylon_node_get_children_description: 'Gets all the children of the particular node',
    block_csg_primitive_2d_rectangle_input_center: 'Rectangle polygon with center point',
    block_csg_primitive_2d_rectangle_input_width: 'Width',
    block_csg_primitive_2d_rectangle_input_length: 'Length',
    block_csg_primitive_2d_rectangle_description: 'Creates a rectangle polygon on the center point of given dimensions.',
    block_csg_extrude_linear_polygon_input_polygon: 'Linear extrusion of polygon',
    block_csg_extrude_linear_polygon_input_height: 'Height',
    block_csg_extrude_linear_polygon_input_twist_angle: 'Twist angle',
    block_csg_extrude_linear_polygon_input_twist_steps: 'Twist steps',
    block_csg_extrude_linear_polygon_description: 'Exrudes linearly the polygon into the given height, twist angle and steps.',
    block_csg_extrude_linear_polygon_objects_input_polygons: 'Linear extrusion of polygons',
    block_csg_extrude_linear_polygon_objects_input_height: 'Height',
    block_csg_extrude_linear_polygon_objects_input_twist_angle: 'Twist angle',
    block_csg_extrude_linear_polygon_objects_input_twist_steps: 'Twist steps',
    block_csg_extrude_linear_polygon_objects_description: 'Linearly exrudes the polygons into the given height, twist angle and steps.',
    block_csg_primitive_2d_polygon_from_points_input_points: 'Polygon from XZ points',
    block_csg_primitive_2d_polygon_from_points_description: 'Creates a polygon when given a list of XZ points',
    block_csg_primitive_2d_polygon_from_polyline_input_polyline: 'Polygon from XZ polyline',
    block_csg_primitive_2d_polygon_from_polyline_description: 'Creates a polygon when given XZ polyline',
    block_csg_primitive_2d_polygon_from_curve_input_curve: 'Polygon from XZ curve',
    block_csg_primitive_2d_polygon_from_curve_description: 'Creates a polygon when given XZ curve',
    block_csg_primitive_2d_polygon_from_path_input_path: 'Polygon from XZ path',
    block_csg_primitive_2d_polygon_from_path_description: 'Creates a polygon when given XZ path',
    block_csg_transform_input_csg_mesh: 'Transform solid',
    block_csg_transform_input_transformation: 'Transformation',
    block_csg_transform_description: 'Transforms the solid mesh with a transformation',
    block_csg_sphere_input_center: 'Solid sphere on the center point',
    block_csg_sphere_input_radius: 'Radius',
    block_csg_sphere_input_segments: 'Segments',
    block_csg_sphere_description: 'Creates the solid sphere on the center point of given segment count.',
    block_csg_cube_input_center: 'Solid cube on the center point',
    block_csg_cube_input_size: 'Size',
    block_csg_cube_description: 'Creates the solid cube of given size on the center point.',
    block_csg_subtract_input_subtract_from_object: 'From solid',
    block_csg_subtract_input_subtract_object: 'Subtract solid',
    block_csg_subtract_description: 'Subtracts the object from object',
    block_csg_union_input_union_object: 'Union solid',
    block_csg_union_input_with_object: 'With solid',
    block_csg_union_description: 'Union two solids together.',
    block_csg_intersect_input_intersect_object: 'Intersect solid',
    block_csg_intersect_input_with_object: 'With solid',
    block_csg_intersect_description: 'Intersects two solids and returns the result.',
    block_csg_color_input_color: 'Apply colour',
    block_csg_color_input_object: 'To solid',
    block_csg_color_description: 'Applies colour to solid object',
    block_csg_cuboid_input_center: 'Solid cuboid on the center point',
    block_csg_cuboid_input_width: 'Width',
    block_csg_cuboid_input_length: 'Length',
    block_csg_cuboid_input_height: 'Height',
    block_csg_cuboid_description: 'Creates a cuboid on the center point.',
    block_csg_union_objects_input_objects: 'Union solids',
    block_csg_union_objects_description: 'Creates the union of the list of solids.',
    block_csg_subtract_objects_input_objects: 'Subtract solids',
    block_csg_subtract_objects_description: 'Subtracts a list of solids',
    block_csg_intersect_objects_input_objects: 'Intersect solids',
    block_csg_intersect_objects_description: 'Intersects a list of solids',
    block_csg_extrude_rectangular_points_input_points: 'Rectangular extrusion path of XZ points',
    block_csg_extrude_rectangular_points_input_height: 'Height',
    block_csg_extrude_rectangular_points_input_size: 'Size',
    block_csg_extrude_rectangular_points_description: 'Creates rectangular extrusion of path formed by XZ points.',
    block_csg_extrude_rectangular_path_input_path: 'Rectangular extrusion of XZ path',
    block_csg_extrude_rectangular_path_input_height: 'Height',
    block_csg_extrude_rectangular_path_input_size: 'Size',
    block_csg_extrude_rectangular_path_description: 'Creates rectangular extrusion of the path.',
    block_csg_extrude_rectangular_paths_input_paths: 'Rectangular extrusion of XZ paths',
    block_csg_extrude_rectangular_paths_input_height: 'Height',
    block_csg_extrude_rectangular_paths_input_size: 'Size',
    block_csg_extrude_rectangular_paths_description: 'Creates rectangular extrusions of the multiple paths.',
    block_csg_primitive_2d_path_from_points_input_points: 'Path from XZ points',
    block_csg_primitive_2d_path_from_points_input_closed: 'Closed',
    block_csg_primitive_2d_path_from_points_description: 'Creates a XZ path from given points.',
    block_csg_primitive_2d_path_close_input_close: 'Close the XZ path',
    block_csg_primitive_2d_path_close_description: 'Closes XZ path by joining last point with the first point.',
    block_csg_primitive_2d_path_append_points_input_path: 'Append path',
    block_csg_primitive_2d_path_append_points_input_points: 'With points',
    block_csg_primitive_2d_path_append_points_description: 'Appends path with points',
    block_csg_primitive_2d_path_append_arc_input_path: 'Append arc to path',
    block_csg_primitive_2d_path_append_arc_input_end_point: 'With XZ end point',
    block_csg_primitive_2d_path_append_arc_input_radius_x: 'X radius',
    block_csg_primitive_2d_path_append_arc_input_radius_z: 'Z radius',
    block_csg_primitive_2d_path_append_arc_input_x_axis_rotation: 'X axis rotation',
    block_csg_primitive_2d_path_append_arc_input_clockwise: 'Clockwise',
    block_csg_primitive_2d_path_append_arc_input_large: 'Large',
    block_csg_primitive_2d_path_append_arc_input_segments: 'Segment count',
    block_csg_primitive_2d_path_append_arc_description: 'Extends the path with an arc of given parameters.',
    block_csg_primitive_2d_path_append_polyline_input_path: 'Append path',
    block_csg_primitive_2d_path_append_polyline_input_polyline: 'With polyline',
    block_csg_primitive_2d_path_append_polyline_description: 'Appends path with polyline.',
    block_csg_primitive_2d_path_append_curve_input_path: 'Append path',
    block_csg_primitive_2d_path_append_curve_input_curve: 'With curve',
    block_csg_primitive_2d_path_append_curve_description: 'Appends path with curve that gets tessellated into points.',
    block_csg_primitive_2d_path_empty_input_path: 'Empty path',
    block_csg_primitive_2d_path_empty_description: 'Creates empty path that can be appended with various entities',
    block_csg_primitive_2d_path_from_polyline_input_polyline: 'Path from XZ polyline',
    block_csg_primitive_2d_path_from_polyline_input_closed: 'Closed',
    block_csg_primitive_2d_path_from_polyline_description: 'Creates a path from polyline.',
    block_csg_primitive_2d_path_from_curve_input_curve: 'Path from XZ curve',
    block_csg_primitive_2d_path_from_curve_input_closed: 'Closed',
    block_csg_primitive_2d_path_from_curve_description: 'Creates a path from curve.',
    block_csg_extrude_rotate_polygon_input_polygon: 'Rotational extrusion of the polygon',
    block_csg_extrude_rotate_polygon_input_angle: 'Angle',
    block_csg_extrude_rotate_polygon_input_start_angle: 'Start angle',
    block_csg_extrude_rotate_polygon_input_segments: 'Segment count',
    block_csg_extrude_rotate_polygon_description: 'Creates rotational extrusion of the polygon.',
    block_csg_hull_paths_input_paths: 'Hull paths',
    block_csg_hull_paths_description: 'Hulls paths together into one path.',
    block_csg_hull_polygons_input_polygons: 'Hull polygons',
    block_csg_hull_polygons_description: 'Hulls polygons together into one polygon.',
    block_csg_hull_solids_input_solids: 'Hull solids',
    block_csg_hull_solids_description: 'Hulls solids into one solid.',
    block_csg_chain_hull_paths_input_paths: 'Chain hull paths',
    block_csg_chain_hull_paths_description: 'Chain hulls paths into a single path boundary.',
    block_csg_chain_hull_polygons_input_polygons: 'Chain hull polygons',
    block_csg_chain_hull_polygons_description: 'Chain hulls polygons into a single polygon boundary.',
    block_csg_chain_hull_solids_input_solids: 'Chain hull solids',
    block_csg_chain_hull_solids_description: 'Chain hulls solids into a single solid boundary.',
    block_csg_expansions_expand_path_input_path: 'Expand to polygon the path',
    block_csg_expansions_expand_path_input_delta: 'Delta',
    block_csg_expansions_expand_path_input_corners: 'Corner type',
    block_csg_expansions_expand_path_input_segments: 'Segment count',
    block_csg_expansions_expand_path_description: 'Expands the path to polygon with given delta distance, selected corner type and segment count.',
    block_csg_corner_type_input_round: 'round',
    block_csg_corner_type_input_chamfer: 'chamfer',
    block_csg_corner_type_input_edge: 'edge',
    block_csg_expansions_expand_polygon_input_polygon: 'Expand polygon',
    block_csg_expansions_expand_polygon_input_delta: 'Delta',
    block_csg_expansions_expand_polygon_input_corners: 'Corners',
    block_csg_expansions_expand_polygon_input_segments: 'Segment count',
    block_csg_expansions_expand_polygon_description: 'Expands the polygon with given delta distance, selected corner type and segment count.',
    block_csg_expansions_expand_solid_input_solid: 'Expand solid',
    block_csg_expansions_expand_solid_input_delta: 'Delta',
    block_csg_expansions_expand_solid_input_corners: 'Corners',
    block_csg_expansions_expand_solid_input_segments: 'Segment count',
    block_csg_expansions_expand_solid_description: 'Expands the solid with given delta distance, selected corner type and segment count.'
});
