import { ResourcesInterface } from './resources.interface';

export const resourcesEn: ResourcesInterface = {
    block_point: 'Point',
    block_points: 'Points',
    block_curve: 'Curve',
    block_curves: 'Curves',
    block_colour: 'Colour',
    block_opacity: 'Opacity',
    block_width: 'Width',
    block_line: 'Line',
    block_lines: 'Lines',
    block_size: 'Size',
    block_polyline: 'Polyline',
    block_surface: 'Surface',
    block_surfaces: 'Surfaces',
    block_validation_required: 'must be provided',
    block_validation_of_length: 'must contain item count of',
    block_validation_higher_or_equal: 'must be higher or equal to',
    block_validation_lower_or_equal: 'must be lower or equal to',
    block_validation_range: 'must be in range',
    block_babylon_input_curve: 'Draw curve',
    block_babylon_input_curves: 'Draw curves',
    block_babylon_input_colour: 'Colour',
    block_babylon_input_opacity: 'Opacity',
    block_babylon_input_width: 'Width',
    block_babylon_input_height: 'Height',
    block_babylon_input_subdivisions: 'Subdivisions',
    block_babylon_input_major_unit_frequency: 'Major unit frequency',
    block_babylon_input_minor_unit_visibility: 'Minor unit visibility',
    block_babylon_input_back_face_culling: 'Back face culling',
    block_babylon_input_main_colour: 'Main color',
    block_babylon_input_secondary_colour: 'Secondary color',
    block_babylon_input_grid_ratio: 'Grid ratio',
    block_babylon_input_draw_point: 'Draw a point',
    block_babylon_input_draw_points: 'Draw a points',
    block_babylon_input_draw_grid: 'Draw grid of width',
    block_babylon_input_draw_line: 'Draw line',
    block_babylon_input_draw_lines: 'Draw lines',
    block_babylon_input_draw_polyline: 'Draw polyline',
    block_babylon_input_draw_surface: 'Draw surface',
    block_babylon_input_draw_surfaces: 'Draw surfaces',
    block_babylon_input_scene_background_colour: 'Scene background colour',
    block_babylon_input_size: 'Size',
    block_babylon_draw_curve_description: 'Draws a coloured curve of selected width',
    block_babylon_draw_curves_description: 'Draws a coloured curves of selected width',
    block_babylon_draw_grid_description: 'Draws the ground grid to help orientation when navigating 3D space',
    block_babylon_draw_line_description: 'Draws a coloured line of selected width',
    block_babylon_draw_lines_description: 'Draws a coloured line of selected width',
    block_babylon_draw_point_description: 'Draws a coloured selected size point in space',
    block_babylon_draw_points_description: 'Draws a coloured selected size points in space',
    block_babylon_draw_polyline_description: 'Draws a coloured polyline of selected width',
    block_babylon_draw_surface_description: 'Draws a coloured surface',
    block_babylon_draw_surfaces_description: 'Draws a coloured surfaces',
    block_babylon_scene_background_colour_description: 'Change the background color of the 3D scene',
    block_base_geometry_input_line_start_point: 'Line with start point',
    block_base_geometry_input_line_end_point: 'End point',
    block_base_geometry_line_description: 'Constructs a Line object between two points',
    block_base_geometry_line_end_point: 'End point of the line',
    block_base_geometry_line_end_point_description: 'Gets the end point of the line',
    block_base_geometry_line_start_point: 'Start point of the line',
    block_base_geometry_line_start_point_description: 'Gets the start point of the line',
    block_base_geometry_line_length: 'Length of the line',
    block_base_geometry_line_length_description: 'Get length of the line',
    block_base_geometry_line_convert_to_nurbs_curve: 'Curve from line',
    block_base_geometry_line_convert_to_nurbs_curve_description: 'Converts line to curve',
    block_base_geometry_line_reverse: 'Reverse the line',
    block_base_geometry_line_reverse_description: 'Reverses the line direction. Start point becomes end point and vice versa.',
};
